{"version":3,"sources":["pages/Home.jsx","pages/utils/P5_Wrapper.jsx","pages/Walking.jsx","pages/Rain.jsx","pages/FunkySnake.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","className","href","to","id","P5Wrapper","this","canvas","p5","props","sketch","wrapper","myCustomRedrawAccordingToNewPropsHandler","newprops","remove","ref","React","Component","vectorLerp","v1","v2","amt","target","set","copy","arguments","length","_friendlyError","lerp","charpos","goalpos","leftpos","rightpos","leftfoot","rightfoot","speedvector","movevector","lastAngle","charAngle","gpbool","mcbool","stepbool","stepboolcounter","drag","upPressed","downPressed","leftPressed","rightPressed","setMovevector","mult","y","x","normalize","vectorControl","mouseX","mouseY","vectorangle","createVector","magSq","pointRotate","vector","pivot","angle","s","sin","c","cos","sub","xnew","ynew","setup","createCanvas","windowWidth","windowHeight","draw","background","ellipse","add","limit","speedvmagSq","toFixed","heading","HALF_PI","speedqualizervector","curAngle","legReworked","keyPressed","keyCode","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","keyReleased","mousePressed","mouseReleased","windowResized","resizeCanvas","Walking","raindrops","mousesize","Drop","random","width","height","speed","falling","splash","splashlocx","splashlocy","splashprocess","windpower","show","stroke","line","fill","color","noStroke","circle","fall","resetRain","wind","that","i","push","Rain","fieldOffsetX","fieldOffsetY","squareSize","gridResY","maxLength","lastDir","startTouchX","startTouchY","fieldWidth","gridResX","touchControl","touchDir","arcSize","isFirstMove","preMove","curDir","curLoc","bodyParts","bodyLength","snakeSize","death","iterationCounter","snaccPos","_frameRate","Math","floor","highScore","fieldHeight","spawnSnacc","calcTouch","calcNewPos","drawGrid","drawPlayer","drawSnacc","drawTouch","reset","drawScore","rect","j","curScore","textSize","textAlign","RIGHT","text","String","fromCodePoint","LEFT","returnRandomPos","xPos","yPos","some","part","gridObject","Array","forEach","_","keys","key","value","keyInt","parseInt","filter","elem","Object","entries","availableKeys","availableX","returnAvailablePos","shift","console","error","colorInterval","index","setDirection","dir","abs","radianDistance","atan2","TWO_PI","x1","y1","x2","y2","dx","dy","distSquared","QUARTER_PI","PI","arc","handleTouchEnd","handleTouchBegin","handleKeys","keyType","up","down","left","right","touchStarted","touchEnded","keyTyped","FunkySnake","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28d91eef.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <>\n      <div className=\"container\">\n        <h1> Random projects</h1>\n        <ol>\n          <li><a href=\"fractals/index.html\"> Mandelbrot Fractal </a> <span className=\"right\"> (Drag mouse and scroll to interact)</span></li>\n          <li><a href=\"portfolio/index.html\"> Lines </a> <span className=\"right\">(Use arrow keys) </span></li>\n          <li><Link to=\"/walking_p5\"> Footsteps </Link> <span className=\"right\">(Use arrow keys or mouseclicks) </span></li>\n          <li><a href=\"chesspath/index.html\"> Prince Chazz </a> <span className=\"right\">(Chess with a twist) </span></li>\n          <li><a href=\"card_js/index.html\"> Card JS </a></li>\n          <li><Link to=\"/rain_p5\"> Rain </Link> <span className=\"right\">(Move around your mouse) </span> </li>\n          <li><a href=\"qr_scan/index.html\"> QR code test </a> <span className=\"right\">(Try holding a QR code in front of your webcam) </span></li>\n          <li><a href=\"p5_frames/index.html\"> Funky frames </a> <span className=\"right\">Move the mouse, and press r, c, p and m </span></li>\n          <li><Link to=\"/funky_snake\">Funky Snake </Link> <span className=\"right\">(Use arrow keys) </span></li>\n        </ol>\n      </div>\n      <h2 id=\"secretsloth\"> &#x1F9A5;</h2>\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react'\nimport p5 from 'p5'\n\nexport default class P5Wrapper extends React.Component {\n  componentDidMount() {\n    this.canvas = new p5(this.props.sketch, this.wrapper)\n    if( this.canvas.myCustomRedrawAccordingToNewPropsHandler ) {\n      this.canvas.myCustomRedrawAccordingToNewPropsHandler(this.props)\n    }\n  }\n\n  componentWillReceiveProps(newprops) {\n    if(this.props.sketch !== newprops.sketch){\n      this.canvas.remove()\n      this.canvas = new p5(newprops.sketch, this.wrapper)\n    }\n    if( this.canvas.myCustomRedrawAccordingToNewPropsHandler ) {\n      this.canvas.myCustomRedrawAccordingToNewPropsHandler(newprops)\n    }\n  }\n\n  componentWillUnmount() {\n    this.canvas.remove()\n  }\n\n  render() {\n    return <div ref={wrapper => this.wrapper = wrapper}></div>\n  }\n}\n","import P5Wrapper from \"./utils/P5_Wrapper\";\n\nconst sketch = (p5) => {\n  /*\n  Made by: Floris Veldhuizen\n  */\n\n  // Had to take this from the source as it didn't work when retrieved from the p5 object\n  function vectorLerp(v1, v2, amt, target) {\n    if (!target) {\n      target = v1.copy();\n      if (arguments.length === 4) {\n        p5._friendlyError(\n          'The target parameter is undefined, it should be of type p5.Vector',\n          'p5.Vector.lerp'\n        );\n      }\n    } else {\n      target.set(v1);\n    }\n    target.lerp(v2, amt);\n    return target;\n  };\n\n  let charpos, goalpos, leftpos, rightpos, leftfoot, rightfoot, speedvector, movevector, lastAngle = 0, charAngle = 0;\n  let gpbool = false, mcbool = false, stepbool = false, stepboolcounter = 0;\n\n  //player variables\n  let charspeed = 1,\n      maxspeed = 4,\n      stepspeed = 25,\n      drag = 0.9;\n\n  // controller values\n  let upPressed = 0, downPressed = 0, leftPressed = 0, rightPressed = 0;\n\n  p5.setup = () => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight);\n    movevector = p5.createVector(0,0);\n    speedvector = p5.createVector(0,0);\n    goalpos = p5.createVector(0,0);\n    charpos = p5.createVector( p5.windowWidth/2, p5.windowHeight/2);\n    leftpos = p5.createVector(charpos.x-20,charpos.y);\n    rightpos = p5.createVector(charpos.x+20,charpos.y);\n    leftfoot = p5.createVector(charpos.x-20,charpos.y);\n    rightfoot = p5.createVector(charpos.x+20,charpos.y);\n  }\n\n  p5.draw = () => {\n    p5.background(255,255,255,255);\n    if (mcbool) {\n      p5.ellipse(p5.mouseX, p5.mouseY, 40, 40);\n      vectorControl();\n    } else if (gpbool) {\n      p5.ellipse(goalpos.x, goalpos.y, 40, 40);\n      vectorControl(goalpos.x,goalpos.y);\n    }\n    speedqualizervector();\n    legReworked();\n    lastAngle = charAngle;\n    if(stepboolcounter > stepspeed){\n      stepboolcounter = 0;\n      stepbool = !stepbool;\n    }\n    stepboolcounter++;\n  }\n\n  function legReworked(){\n      let curAngle = charAngle - lastAngle;\n      rightpos.add(speedvector);\n      leftpos.add(speedvector);\n      leftpos = pointRotate(leftpos,charpos,curAngle);\n      rightpos = pointRotate(rightpos,charpos,curAngle);\n\n      if(!stepbool){\n        leftfoot = vectorLerp(leftfoot,leftpos,0.1);\n      } else if (stepbool) {\n        rightfoot = vectorLerp(rightfoot,rightpos,0.1);\n      }\n\n      // draw them leggos\n      p5.ellipse(leftfoot.x, leftfoot.y, 10, 10);\n      p5.ellipse(rightfoot.x, rightfoot.y, 10, 10);\n  }\n\n  function speedqualizervector(){\n    speedvector.add(movevector.mult(charspeed));\n    speedvector.limit(maxspeed);\n    const speedvmagSq = speedvector.magSq();\n    //if the player is not moving, the character should stop\n    if (speedvmagSq > 0) {\n      if(speedvmagSq.toFixed(2) > 0){\n        if(movevector.x===0) speedvector.x *= drag;\n        if(movevector.y===0) speedvector.y *= drag;\n        charAngle = speedvector.heading() + p5.HALF_PI;\n      } else {\n        speedvector.mult(0);\n        charAngle = lastAngle;\n      }\n    }\n    charpos.add(speedvector);\n  }\n\n  function setMovevector(){\n    gpbool = false;\n    movevector.mult(0);\n    movevector.y += -1 * upPressed;\n    movevector.y += 1 * downPressed;\n    movevector.x += -1 * leftPressed;\n    movevector.x += 1 * rightPressed;\n    movevector.normalize();\n  }\n\n  function vectorControl(x = p5.mouseX,y = p5.mouseY){\n    let vectorangle = p5.createVector(0,0);\n    vectorangle.x = (x - charpos.x);\n    vectorangle.y = (y - charpos.y);\n    if(vectorangle.magSq() > 15){\n      movevector = vectorangle.normalize();\n    } else {\n      speedvector.mult(drag**2);\n      movevector.mult(0);\n      gpbool = false;\n    }\n  }\n\n  /*\n  KEY SHIT\n  */\n  p5.keyPressed = () => {\n    if (p5.keyCode === p5.LEFT_ARROW) {\n      leftPressed = 1;\n    }\n    if (p5.keyCode === p5.RIGHT_ARROW) {\n      rightPressed = 1;\n    }\n    if (p5.keyCode === p5.UP_ARROW) {\n      upPressed = 1;\n    }\n    if (p5.keyCode === p5.DOWN_ARROW) {\n      downPressed = 1;\n    }\n    setMovevector();\n  }\n\n  p5.keyReleased = () => {\n    if (p5.keyCode === p5.LEFT_ARROW) {\n      leftPressed = 0;\n    }\n    if (p5.keyCode === p5.RIGHT_ARROW) {\n      rightPressed = 0;\n    }\n    if (p5.keyCode === p5.UP_ARROW) {\n      upPressed = 0;\n    }\n    if (p5.keyCode === p5.DOWN_ARROW) {\n      downPressed = 0;\n    }\n    setMovevector();\n  }\n  p5.mousePressed = () => {\n    mcbool = true;\n    gpbool = false;\n  }\n  p5.mouseReleased = () => {\n    mcbool = false;\n    gpbool = true;\n    goalpos.x = p5.mouseX;\n    goalpos.y = p5.mouseY;\n    movevector.x = 0;\n    movevector.y = 0;\n  }\n  p5.windowResized = () => {\n    p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n  }\n\n  /**\n  * For lack of better rotation in p5.js\n  * @param {vector} p5.Vector  \tThis is the vector (coord) that you want to rotate\n  * @param {pivot}  p5.Vector  \tThis is the vector (coord) you want to pivot around\n  * @param {angle}\tnumber  \t\tThis is the angle of the rotation in radians\n  */\n  function pointRotate(vector,pivot,angle){\n    const s = p5.sin(angle);\n    const c = p5.cos(angle);\n    // translate point back to origin:\n    vector.sub(pivot);\n    // rotate point\n    let xnew = vector.x * c - vector.y * s;\n    let ynew = vector.x * s + vector.y * c;\n    // translate point back:\n    vector.x = xnew + pivot.x;\n    vector.y = ynew + pivot.y;\n    return vector;\n  }\n}\n\nconst Walking = () => {\n  return (\n    <P5Wrapper sketch={sketch} />\n  );\n};\n\nexport default Walking;\n","import P5Wrapper from \"./utils/P5_Wrapper\";\n\nconst sketch = (p5) => {\n  /*\n  Made by: Floris Veldhuizen\n  */\n\n  let raindrops = [];\n  let gravity = 0.1;\n  let terminalvelocity = 20;\n  let rainy = 180;\n  let mousesize = 100;\n\n  p5.setup = () => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight);\n    for (let i = 0; i < rainy; i++) {\n      raindrops.push(new Drop());\n    }\n  }\n\n  p5.draw = () => {\n    p5.background(0,0,0,100);\n    for (let i = 0; i < raindrops.length; i++) {\n      raindrops[i].wind();\n      raindrops[i].fall();\n      raindrops[i].show();\n    }\n  }\n\n  function Drop(){\n    this.x = p5.random(p5.width);\n    this.y = p5.random(-10, -p5.height);\n    this.speed = p5.random(0, 2);\n    this.falling = true;\n    this.splash = false;\n    this.splashlocx = 0;\n    this.splashlocy = p5.height;\n    this.splashprocess = 0;\n    this.windpower = 10;\n\n    this.show = function() {\n      if (this.splash) {\n        p5.stroke(255);\n        p5.line(this.splashlocx, this.splashlocy, this.splashlocx - p5.random(4,11), this.splashlocy - p5.random(5,10));\n        p5.line(this.splashlocx, this.splashlocy, this.splashlocx, this.splashlocy - p5.random(10,16));\n        p5.line(this.splashlocx, this.splashlocy, this.splashlocx + p5.random(4,11), this.splashlocy - p5.random(5,10));\n        p5.fill(p5.color(0));\n        p5.noStroke();\n        p5.circle(this.splashlocx, this.splashlocy, this.splashprocess);\n        this.splashprocess++;\n        if(this.splashprocess>16){\n          this.splash = false;\n          this.falling = true;\n          this.splashprocess = 0;\n        }\n      }\n      if (this.falling) {\n        p5.stroke(255);\n        p5.line(this.x, this.y, this.x + this.windpower, this.y + this.speed);\n      }\n    }\n\n    this.fall = function() {\n      if(this.falling){\n        this.x = this.x + this.windpower;\n        this.y = this.y + this.speed;\n        this.speed = this.speed + gravity;\n        if(this.y > p5.height){\n          resetRain(this,p5.height);\n        }\n        else if(collisionRain(this.x,this.y)) {\n          resetRain(this,this.y);\n        }\n        if(this.x > p5.width){\n          this.x = 0;\n        }\n        if(this.x < 0){\n          this.x = p5.width;\n        }\n      }\n    }\n\n    this.wind = function(){\n      this.windpower = -(p5.width/2-p5.mouseX)/100;\n    }\n  }\n\n  function collisionRain(x,y) {\n    if(x > p5.mouseX - (mousesize/2) && x < p5.mouseX + (mousesize/2) && y > p5.mouseY && y < p5.mouseY + mousesize) {\n      return true; //if hit\n    } else {\n      return false;\n    }\n  }\n\n  function resetRain(that,splashlocy){\n    that.splash = true;\n    that.falling = false;\n    that.splashlocy = splashlocy;\n    that.splashlocx = that.x;\n    that.x = p5.random(p5.width);\n    that.y = -10;\n    if(that.speed > terminalvelocity)\n      that.speed = terminalvelocity;\n  }\n\n  p5.windowResized = () => {\n    p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n    raindrops = [];\n    for (let i = 0; i < rainy; i++) {\n      raindrops.push(new Drop());\n    }\n  }\n}\n\nconst Rain = () => {\n  return (\n    <P5Wrapper sketch={sketch} />\n  );\n};\n\nexport default Rain;\n","import P5Wrapper from \"./utils/P5_Wrapper\";\n\nconst sketch = (p5) => {\n  /*\n  Made by: Floris Veldhuizen\n  Queuing of moves was adapted from: https://github.com/patorjk/JavaScript-Snake/blob/master/js/snake.js\n  */\n\n  // PARAMS\n  const fieldWidth = 400;\n  const fieldHeight = 400;\n  const gridResX = 14;          // How many squares fit in a row  (default: 14)\n  const gameSpeed = 13;         // Amount of frames per second    (default: 12)\n  const snakeSize = 5;\n\n  // GLOBAL VARIABLES\n  const NIL     = -1;\n  const _RIGHT  = 0;\n  const _DOWN   = 1;\n  const _LEFT   = 2;\n  const _UP     = 3;\n\n  // PRECALCULATED VALUES\n  let fieldOffsetX, fieldOffsetY, squareSize, gridResY, maxLength, lastDir;\n\n  // TOUCH CONTROLS\n  let startTouchX, startTouchY;\n  let touchControl = false;     // If true, the touch controls are displayed on screen\n  let touchDir = NIL;\n  const arcSize = 120;          // Diameter of the touch controls\n\n  let isFirstMove = true;\n  let preMove = NIL;\n  let curDir = _RIGHT;\n  let curLoc = [0,0];\n  let bodyParts = [];\n  let bodyLength = snakeSize - 1;\n  let death = false;\n  let iterationCounter = 0;\n  let snaccPos = [0,0];\n  let _frameRate = Math.floor(60 / gameSpeed); // Assuming 60 fps\n  let highScore = 0;\n\n  p5.setup = () => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight);\n    p5.background(0,0,0,100);\n    fieldOffsetX = (p5.windowWidth/2)-(fieldWidth/2);\n    fieldOffsetY = (p5.windowHeight/2)-(fieldHeight/2);\n    squareSize = fieldWidth / gridResX;\n    gridResY = Math.floor(fieldHeight / squareSize);\n    maxLength = gridResX * gridResY;\n    spawnSnacc();\n  }\n\n  p5.draw = () => {\n    if (touchControl) calcTouch();\n    if (iterationCounter > _frameRate) {\n      p5.background(0,0,0,100);\n      calcNewPos();\n      drawGrid();\n      drawPlayer();\n      drawSnacc();\n      iterationCounter = 0;\n    }\n    if (touchControl) drawTouch();\n    if (death) reset();\n    iterationCounter++;\n    drawScore();\n  }\n\n  const reset = () => {\n    p5.fill(255);\n    p5.rect(0,0,p5.windowWidth,p5.windowHeight);\n    p5.background(0,0,0,100);\n    bodyLength = snakeSize - 1;\n    bodyParts = [];\n    death = false;\n  }\n\n  const drawGrid = () => {\n    p5.stroke(255)\n    p5.fill(0);\n    for (let i = 0; i < gridResX; i++) { // x-axis\n      for (let j = 0; j < gridResY; j++) { // y-axis\n        p5.rect(i * squareSize + fieldOffsetX, j * squareSize + fieldOffsetY, squareSize, squareSize);\n      }\n    }\n  }\n\n  const drawScore = () => {\n    const fontSize = 30;\n    const curScore = bodyLength - (snakeSize - 1);\n    if(curScore > highScore) highScore = curScore;\n    p5.textSize(fontSize);\n    p5.fill(255)\n    // Highscore\n    p5.textAlign(p5.RIGHT);\n    p5.text(`${String.fromCodePoint(0x1F3C6)}: ${highScore}`, fieldOffsetX + fieldWidth, fieldOffsetY - fontSize);\n    // Current score\n    p5.textAlign(p5.LEFT);\n    p5.text(`${String.fromCodePoint(0x1F36C)}: ${curScore}`, fieldOffsetX, fieldOffsetY - fontSize);\n  }\n\n  const spawnSnacc = () => {\n    // TO-DO: use maxLength to determine when the game is over\n    const returnRandomPos = () => {\n      const xPos = Math.floor(Math.random() * gridResX);\n      const yPos = Math.floor(Math.random() * gridResY);\n      const overlap = bodyParts.some(part => (part[0] === xPos && part[1] === yPos));\n      return overlap ? returnRandomPos() : [xPos, yPos];\n    }\n\n    const returnAvailablePos = () => {\n      const gridObject = {};\n      [...Array(gridResX)].forEach((_,i) => gridObject[i] = [...Array(gridResY).keys()]);\n      for (const [key, value] of Object.entries(gridObject)) {\n        const keyInt = parseInt(key);\n        gridObject[key] = value.filter(elem =>\n          !bodyParts.some(part => part[0] === keyInt && part[1] === elem)\n        )\n        if (gridObject[key].length < 1) delete gridObject[key];\n      }\n      const availableKeys = Object.keys(gridObject);\n      const availableX = parseInt(availableKeys[Math.floor(Math.random() * availableKeys.length)]);\n      const availableY = gridObject[availableX][Math.floor(Math.random() * gridObject[availableX].length)];\n      return [availableX, availableY];\n    }\n\n  return snaccPos = bodyLength < maxLength / 2 ? returnRandomPos() : returnAvailablePos();\n  }\n\n  const drawSnacc = () => {\n    p5.textSize(32);\n    p5.text(`${String.fromCodePoint(0x1F36C)}`, snaccPos[0] * squareSize + fieldOffsetX, (snaccPos[1] + 0.9) * squareSize + fieldOffsetY);\n  }\n\n  const calcNewPos = () => {\n    // Set lastDir and check for queued moves\n    lastDir = curDir;\n    if (preMove !== NIL) {\n      curDir = preMove;\n      preMove = NIL;\n    }\n    isFirstMove = true;\n\n    // Calculate new position of body based on direction\n    if      (lastDir === _UP)    { curLoc[1]-- }\n    else if (lastDir === _DOWN)  { curLoc[1]++ }\n    else if (lastDir === _LEFT)  { curLoc[0]-- }\n    else if (lastDir === _RIGHT) { curLoc[0]++ }\n\n    // Boundary check\n    if      (curLoc[1] < 0) { curLoc[1] = gridResY - 1 }\n    else if (curLoc[1] > gridResY - 1) { curLoc[1] = 0 }\n    else if (curLoc[0] < 0) { curLoc[0] = gridResX - 1 }\n    else if (curLoc[0] > gridResX - 1) { curLoc[0] = 0 }\n\n    // Shift the snake body\n    if (bodyParts.length > bodyLength) { bodyParts.shift(); }\n\n    // Death 💀 check\n    bodyParts.forEach(part => {\n      if (curLoc[0] === part[0] && curLoc[1] === part[1]) {\n      death = true;\n      console.error(`U DEAD ${String.fromCodePoint(0x1F480)}`);\n      }\n    });\n\n    // Set all bodyparts\n    bodyParts.push([...curLoc]);\n\n    // Snacc 🍬 check\n    if (curLoc[0] === snaccPos[0] && curLoc[1] === snaccPos[1]) {\n      bodyLength++;\n      spawnSnacc();\n    }\n  }\n\n  const drawPlayer = () => {\n    const colorInterval = Math.floor(155 / bodyLength);\n    bodyParts.forEach((part,index) => {\n      p5.fill(index * colorInterval + 100,0,0);\n      p5.rect(part[0] * squareSize + fieldOffsetX, part[1] * squareSize + fieldOffsetY, squareSize, squareSize);\n    });\n  }\n\n  const setDirection = dir => {\n    if (curDir !== lastDir) { preMove = dir }\n    if (Math.abs(dir - lastDir) !== 2 && isFirstMove) {\n      curDir = dir;\n      isFirstMove = false;\n    }\n    touchDir = dir;\n  }\n\n  const calcTouch = () => {\n    const distSquared = (x1, y1, x2, y2) => {\n      let dx = x2 - x1;\n      let dy = y2 - y1;\n      return dx * dx + dy * dy;\n    }\n    let radianDistance = Math.atan2(p5.mouseY-startTouchY, p5.mouseX-startTouchX);\n    if (radianDistance < 0) radianDistance = radianDistance + p5.TWO_PI;\n    if(distSquared(startTouchX, startTouchY, p5.mouseX, p5.mouseY) > 100) {\n      if      (radianDistance > p5.TWO_PI - p5.QUARTER_PI || radianDistance < p5.QUARTER_PI)          { setDirection(_RIGHT)}\n      else if (radianDistance > p5.QUARTER_PI && radianDistance < p5.HALF_PI + p5.QUARTER_PI)         { setDirection(_DOWN) }\n      else if (radianDistance > p5.HALF_PI + p5.QUARTER_PI && radianDistance < p5.PI + p5.QUARTER_PI) { setDirection(_LEFT) }\n      else if (radianDistance > p5.PI + p5.QUARTER_PI && radianDistance < p5.TWO_PI - p5.QUARTER_PI)  { setDirection(_UP)   }\n    } else {\n      touchDir = NIL;\n    }\n  }\n\n  const drawTouch = () => {\n    const bottomArc = () => p5.arc(startTouchX, startTouchY, arcSize, arcSize, p5.QUARTER_PI, p5.HALF_PI + p5.QUARTER_PI);\n    const leftArc   = () => p5.arc(startTouchX, startTouchY, arcSize, arcSize, p5.HALF_PI + p5.QUARTER_PI, p5.PI + p5.QUARTER_PI);\n    const topArc    = () => p5.arc(startTouchX, startTouchY, arcSize, arcSize, p5.PI + p5.QUARTER_PI, p5.TWO_PI - p5.QUARTER_PI);\n    const rightArc  = () => p5.arc(startTouchX, startTouchY, arcSize, arcSize, p5.TWO_PI - p5.QUARTER_PI, p5.QUARTER_PI);\n\n    p5.fill(100);\n    p5.ellipse(startTouchX, startTouchY, arcSize, arcSize);\n    p5.fill(200);\n    if (touchDir === _UP)    topArc();\n    if (touchDir === _DOWN)  bottomArc();\n    if (touchDir === _LEFT)  leftArc();\n    if (touchDir === _RIGHT) rightArc();\n\n    // TO-DO: DRAW JOYSTICK THAT IS constrained BY BOUNDARIES OF CONTROL\n    p5.fill(50);\n    p5.ellipse(p5.mouseX, p5.mouseY, arcSize/2, arcSize/2);\n  }\n\n  const handleTouchEnd = () => {\n    touchControl = false;\n    return false;\n  }\n\n  const handleTouchBegin = () => {\n    startTouchX = p5.mouseX;\n    startTouchY = p5.mouseY;\n    touchControl = true;\n    return false;\n  }\n\n  const handleKeys = (keyType, up, down, left, right) => {\n    if (keyType === right) { setDirection(_RIGHT)}\n    if (keyType === down)  { setDirection(_DOWN) }\n    if (keyType === left)  { setDirection(_LEFT) }\n    if (keyType === up)    { setDirection(_UP)   }\n  }\n\n  p5.mousePressed = () => {\n    return handleTouchBegin();\n  }\n\n  p5.touchStarted = () => {\n    return handleTouchBegin();\n  }\n\n  p5.mouseReleased = () => {\n    return handleTouchEnd();\n  }\n\n  p5.touchEnded = () => {\n    return handleTouchEnd();\n  }\n\n  p5.keyTyped = () => {\n    handleKeys(p5.key, \"w\", \"s\", \"a\", \"d\");\n  }\n\n  p5.keyPressed = () => {\n    handleKeys(p5.keyCode, p5.UP_ARROW, p5.DOWN_ARROW, p5.LEFT_ARROW, p5.RIGHT_ARROW);\n  }\n\n  p5.windowResized = () => {\n    p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n    p5.background(0,0,0,100);\n    fieldOffsetX = (p5.windowWidth/2)-(fieldWidth/2);\n    fieldOffsetY = (p5.windowHeight/2)-(fieldHeight/2);\n    squareSize = fieldWidth / gridResX;\n  }\n}\n\nconst FunkySnake = () => {\n  return (\n    <P5Wrapper sketch={sketch} />\n  );\n};\n\nexport default FunkySnake;\n","import './App.css';\nimport Home from \"./pages/Home\";\nimport Walking from './pages/Walking';\nimport Rain from \"./pages/Rain\";\nimport FunkySnake from './pages/FunkySnake';\nimport { Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/walking_p5\" component={Walking} />\n        <Route path=\"/rain_p5\" component={Rain} />\n        <Route path=\"/funky_snake\" component={FunkySnake} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
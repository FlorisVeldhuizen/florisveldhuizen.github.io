{"ast":null,"code":"var _jsxFileName = \"/Users/floris.veldhuizen/Documents/GitHub/florisveldhuizen.github.io/src/pages/Walking.jsx\";\n// import P5Wrapper from \"./utils/P5_Wrapper\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sketch = p5 => {\n  /*\n  Made by: Floris Veldhuizen\n  */\n  function vectorLerp(x, y, z, amt) {\n    // if (x instanceof p5.Vector) {\n    //   return this.lerp(x.x, x.y, x.z, y);\n    // }\n    this.x += (x - this.x) * amt || 0;\n    this.y += (y - this.y) * amt || 0;\n    this.z += (z - this.z) * amt || 0;\n    return this;\n  }\n\n  ;\n  let charpos,\n      goalpos,\n      leftpos,\n      rightpos,\n      leftfoot,\n      rightfoot,\n      speedvector,\n      movevector,\n      lastAngle = 0,\n      charAngle = 0;\n  let gpbool = false,\n      mcbool = false,\n      stepbool = false,\n      stepboolcounter = 0; //player variables\n\n  let charspeed = 1,\n      maxspeed = 4,\n      stepspeed = 25,\n      drag = 0.9; // controller values\n\n  let upPressed = 0,\n      downPressed = 0,\n      leftPressed = 0,\n      rightPressed = 0;\n\n  p5.setup = () => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight);\n    movevector = p5.createVector(0, 0);\n    speedvector = p5.createVector(0, 0);\n    goalpos = p5.createVector(0, 0);\n    charpos = p5.createVector(p5.windowWidth / 2, p5.windowHeight / 2);\n    leftpos = p5.createVector(charpos.x - 20, charpos.y);\n    rightpos = p5.createVector(charpos.x + 20, charpos.y);\n    leftfoot = p5.createVector(charpos.x - 20, charpos.y);\n    rightfoot = p5.createVector(charpos.x + 20, charpos.y);\n  };\n\n  p5.draw = () => {\n    p5.background(255, 255, 255, 255);\n\n    if (mcbool) {\n      p5.ellipse(p5.mouseX, p5.mouseY, 40, 40);\n      vectorControl();\n    } else if (gpbool) {\n      p5.ellipse(goalpos.x, goalpos.y, 40, 40);\n      vectorControl(goalpos.x, goalpos.y);\n    }\n\n    speedqualizervector();\n    legReworked();\n    lastAngle = charAngle;\n\n    if (stepboolcounter > stepspeed) {\n      stepboolcounter = 0;\n      stepbool = !stepbool;\n    }\n\n    stepboolcounter++;\n  };\n\n  function legReworked() {\n    let curAngle = charAngle - lastAngle;\n    rightpos.add(speedvector);\n    leftpos.add(speedvector);\n    leftpos = pointRotate(leftpos, charpos, curAngle);\n    rightpos = pointRotate(rightpos, charpos, curAngle);\n\n    if (!stepbool) {\n      leftfoot = vectorLerp(leftfoot, leftpos, 0.1);\n    } else {\n      rightfoot = vectorLerp(rightfoot, rightpos, 0.1);\n    } // draw them leggos\n\n\n    p5.ellipse(leftfoot.x, leftfoot.y, 10, 10);\n    p5.ellipse(rightfoot.x, rightfoot.y, 10, 10);\n  }\n\n  function speedqualizervector() {\n    speedvector.add(movevector.mult(charspeed));\n    speedvector.limit(maxspeed);\n    const speedvmagSq = speedvector.magSq(); //if the player is not moving, the character should stop\n\n    if (speedvmagSq > 0) {\n      if (speedvmagSq.toFixed(2) > 0) {\n        if (movevector.x === 0) speedvector.x *= drag;\n        if (movevector.y === 0) speedvector.y *= drag;\n        charAngle = speedvector.heading() + p5.HALF_PI;\n      } else {\n        speedvector.mult(0);\n        charAngle = lastAngle;\n      }\n    }\n\n    charpos.add(speedvector);\n  }\n\n  function setMovevector() {\n    gpbool = false;\n    movevector.mult(0);\n    movevector.y += -1 * upPressed;\n    movevector.y += 1 * downPressed;\n    movevector.x += -1 * leftPressed;\n    movevector.x += 1 * rightPressed;\n    movevector.normalize();\n  }\n\n  function vectorControl(x = p5.mouseX, y = p5.mouseY) {\n    let vectorangle = p5.createVector(0, 0);\n    vectorangle.x = x - charpos.x;\n    vectorangle.y = y - charpos.y;\n\n    if (vectorangle.magSq() > 15) {\n      movevector = vectorangle.normalize();\n    } else {\n      speedvector.mult(drag ** 2);\n      movevector.mult(0);\n      gpbool = false;\n    }\n  }\n  /*\n  KEY SHIT\n  */\n\n\n  p5.keyPressed = () => {\n    if (p5.keyCode === p5.LEFT_ARROW) {\n      leftPressed = 1;\n    }\n\n    if (p5.keyCode === p5.RIGHT_ARROW) {\n      rightPressed = 1;\n    }\n\n    if (p5.keyCode === p5.UP_ARROW) {\n      upPressed = 1;\n    }\n\n    if (p5.keyCode === p5.DOWN_ARROW) {\n      downPressed = 1;\n    }\n\n    setMovevector();\n  };\n\n  p5.keyReleased = () => {\n    if (p5.keyCode === p5.LEFT_ARROW) {\n      leftPressed = 0;\n    }\n\n    if (p5.keyCode === p5.RIGHT_ARROW) {\n      rightPressed = 0;\n    }\n\n    if (p5.keyCode === p5.UP_ARROW) {\n      upPressed = 0;\n    }\n\n    if (p5.keyCode === p5.DOWN_ARROW) {\n      downPressed = 0;\n    }\n\n    setMovevector();\n  };\n\n  p5.mousePressed = () => {\n    mcbool = true;\n    gpbool = false;\n  };\n\n  p5.mouseReleased = () => {\n    mcbool = false;\n    gpbool = true;\n    goalpos.x = p5.mouseX;\n    goalpos.y = p5.mouseY;\n    movevector.x = 0;\n    movevector.y = 0;\n  };\n\n  p5.windowResized = () => {\n    p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n  };\n  /**\n  * For lack of better rotation in p5.js\n  * @param {vector} p5.Vector  \tThis is the vector (coord) that you want to rotate\n  * @param {pivot}  p5.Vector  \tThis is the vector (coord) you want to pivot around\n  * @param {angle}\tnumber  \t\tThis is the angle of the rotation in radians\n  */\n\n\n  function pointRotate(vector, pivot, angle) {\n    const s = p5.sin(angle);\n    const c = p5.cos(angle); // translate point back to origin:\n\n    vector.sub(pivot); // rotate point\n\n    let xnew = vector.x * c - vector.y * s;\n    let ynew = vector.x * s + vector.y * c; // translate point back:\n\n    vector.x = xnew + pivot.x;\n    vector.y = ynew + pivot.y;\n    return vector;\n  }\n};\n\nconst Walking = () => {\n  return /*#__PURE__*/_jsxDEV(ReactP5Wrapper, {\n    sketch: sketch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Walking;\nexport default Walking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Walking\");","map":{"version":3,"sources":["/Users/floris.veldhuizen/Documents/GitHub/florisveldhuizen.github.io/src/pages/Walking.jsx"],"names":["ReactP5Wrapper","sketch","p5","vectorLerp","x","y","z","amt","charpos","goalpos","leftpos","rightpos","leftfoot","rightfoot","speedvector","movevector","lastAngle","charAngle","gpbool","mcbool","stepbool","stepboolcounter","charspeed","maxspeed","stepspeed","drag","upPressed","downPressed","leftPressed","rightPressed","setup","createCanvas","windowWidth","windowHeight","createVector","draw","background","ellipse","mouseX","mouseY","vectorControl","speedqualizervector","legReworked","curAngle","add","pointRotate","mult","limit","speedvmagSq","magSq","toFixed","heading","HALF_PI","setMovevector","normalize","vectorangle","keyPressed","keyCode","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","keyReleased","mousePressed","mouseReleased","windowResized","resizeCanvas","vector","pivot","angle","s","sin","c","cos","sub","xnew","ynew","Walking"],"mappings":"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","sourcesContent":["// import P5Wrapper from \"./utils/P5_Wrapper\";\n\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\n\nconst sketch = (p5) => {\n  /*\n  Made by: Floris Veldhuizen\n  */\n\n  function vectorLerp(x, y, z, amt) {\n    // if (x instanceof p5.Vector) {\n    //   return this.lerp(x.x, x.y, x.z, y);\n    // }\n    this.x += (x - this.x) * amt || 0;\n    this.y += (y - this.y) * amt || 0;\n    this.z += (z - this.z) * amt || 0;\n    return this;\n  };\n\n  let charpos, goalpos, leftpos, rightpos, leftfoot, rightfoot, speedvector, movevector, lastAngle = 0, charAngle = 0;\n  let gpbool = false, mcbool = false, stepbool = false, stepboolcounter = 0;\n\n  //player variables\n  let charspeed = 1,\n      maxspeed = 4,\n      stepspeed = 25,\n      drag = 0.9;\n\n  // controller values\n  let upPressed = 0, downPressed = 0, leftPressed = 0, rightPressed = 0;\n\n  p5.setup = () => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight);\n    movevector = p5.createVector(0,0);\n    speedvector = p5.createVector(0,0);\n    goalpos = p5.createVector(0,0);\n    charpos = p5.createVector( p5.windowWidth/2, p5.windowHeight/2);\n    leftpos = p5.createVector(charpos.x-20,charpos.y);\n    rightpos = p5.createVector(charpos.x+20,charpos.y);\n    leftfoot = p5.createVector(charpos.x-20,charpos.y);\n    rightfoot = p5.createVector(charpos.x+20,charpos.y);\n  }\n\n  p5.draw = () => {\n    p5.background(255,255,255,255);\n    if (mcbool) {\n      p5.ellipse(p5.mouseX, p5.mouseY, 40, 40);\n      vectorControl();\n    } else if (gpbool) {\n      p5.ellipse(goalpos.x, goalpos.y, 40, 40);\n      vectorControl(goalpos.x,goalpos.y);\n    }\n    speedqualizervector();\n    legReworked();\n    lastAngle = charAngle;\n    if(stepboolcounter > stepspeed){\n      stepboolcounter = 0;\n      stepbool = !stepbool;\n    }\n    stepboolcounter++;\n  }\n\n  function legReworked(){\n      let curAngle = charAngle - lastAngle;\n      rightpos.add(speedvector);\n      leftpos.add(speedvector);\n      leftpos = pointRotate(leftpos,charpos,curAngle);\n      rightpos = pointRotate(rightpos,charpos,curAngle);\n\n      if(!stepbool){\n        leftfoot = vectorLerp(leftfoot,leftpos,0.1);\n      } else {\n        rightfoot = vectorLerp(rightfoot,rightpos,0.1);\n      }\n\n      // draw them leggos\n      p5.ellipse(leftfoot.x, leftfoot.y, 10, 10);\n      p5.ellipse(rightfoot.x, rightfoot.y, 10, 10);\n  }\n\n  function speedqualizervector(){\n    speedvector.add(movevector.mult(charspeed));\n    speedvector.limit(maxspeed);\n    const speedvmagSq = speedvector.magSq();\n    //if the player is not moving, the character should stop\n    if (speedvmagSq > 0) {\n      if(speedvmagSq.toFixed(2) > 0){\n        if(movevector.x===0) speedvector.x *= drag;\n        if(movevector.y===0) speedvector.y *= drag;\n        charAngle = speedvector.heading() + p5.HALF_PI;\n      } else {\n        speedvector.mult(0);\n        charAngle = lastAngle;\n      }\n    }\n    charpos.add(speedvector);\n  }\n\n  function setMovevector(){\n    gpbool = false;\n    movevector.mult(0);\n    movevector.y += -1 * upPressed;\n    movevector.y += 1 * downPressed;\n    movevector.x += -1 * leftPressed;\n    movevector.x += 1 * rightPressed;\n    movevector.normalize();\n  }\n\n  function vectorControl(x = p5.mouseX,y = p5.mouseY){\n    let vectorangle = p5.createVector(0,0);\n    vectorangle.x = (x - charpos.x);\n    vectorangle.y = (y - charpos.y);\n    if(vectorangle.magSq() > 15){\n      movevector = vectorangle.normalize();\n    } else {\n      speedvector.mult(drag**2);\n      movevector.mult(0);\n      gpbool = false;\n    }\n  }\n\n  /*\n  KEY SHIT\n  */\n  p5.keyPressed = () => {\n    if (p5.keyCode === p5.LEFT_ARROW) {\n      leftPressed = 1;\n    }\n    if (p5.keyCode === p5.RIGHT_ARROW) {\n      rightPressed = 1;\n    }\n    if (p5.keyCode === p5.UP_ARROW) {\n      upPressed = 1;\n    }\n    if (p5.keyCode === p5.DOWN_ARROW) {\n      downPressed = 1;\n    }\n    setMovevector();\n  }\n\n  p5.keyReleased = () => {\n    if (p5.keyCode === p5.LEFT_ARROW) {\n      leftPressed = 0;\n    }\n    if (p5.keyCode === p5.RIGHT_ARROW) {\n      rightPressed = 0;\n    }\n    if (p5.keyCode === p5.UP_ARROW) {\n      upPressed = 0;\n    }\n    if (p5.keyCode === p5.DOWN_ARROW) {\n      downPressed = 0;\n    }\n    setMovevector();\n  }\n  p5.mousePressed = () => {\n    mcbool = true;\n    gpbool = false;\n  }\n  p5.mouseReleased = () => {\n    mcbool = false;\n    gpbool = true;\n    goalpos.x = p5.mouseX;\n    goalpos.y = p5.mouseY;\n    movevector.x = 0;\n    movevector.y = 0;\n  }\n  p5.windowResized = () => {\n    p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n  }\n\n  /**\n  * For lack of better rotation in p5.js\n  * @param {vector} p5.Vector  \tThis is the vector (coord) that you want to rotate\n  * @param {pivot}  p5.Vector  \tThis is the vector (coord) you want to pivot around\n  * @param {angle}\tnumber  \t\tThis is the angle of the rotation in radians\n  */\n  function pointRotate(vector,pivot,angle){\n    const s = p5.sin(angle);\n    const c = p5.cos(angle);\n    // translate point back to origin:\n    vector.sub(pivot);\n    // rotate point\n    let xnew = vector.x * c - vector.y * s;\n    let ynew = vector.x * s + vector.y * c;\n    // translate point back:\n    vector.x = xnew + pivot.x;\n    vector.y = ynew + pivot.y;\n    return vector;\n  }\n}\n\nconst Walking = () => {\n  return (\n    <ReactP5Wrapper sketch={sketch} />\n  );\n};\n\nexport default Walking;\n"]},"metadata":{},"sourceType":"module"}
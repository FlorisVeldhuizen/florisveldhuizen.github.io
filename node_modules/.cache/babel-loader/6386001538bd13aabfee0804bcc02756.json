{"ast":null,"code":"var _jsxFileName = \"/Users/floris.veldhuizen/Documents/GitHub/florisveldhuizen.github.io/src/pages/Walking.jsx\";\nimport P5Wrapper from \"./utils/P5_Wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sketch = p5 => {\n  /*\n  Made by: Floris Veldhuizen\n  */\n  let charpos,\n      goalpos,\n      leftpos,\n      rightpos,\n      leftfoot,\n      rightfoot,\n      speedvector,\n      movevector,\n      lastAngle = 0,\n      charAngle = 0;\n  let gpbool = false,\n      mcbool = false,\n      stepbool = false,\n      stepboolcounter = 0; //player variables\n\n  let charspeed = 1,\n      maxspeed = 4,\n      stepspeed = 25,\n      drag = 0.9; // controller values\n\n  let upPressed = 0,\n      downPressed = 0,\n      leftPressed = 0,\n      rightPressed = 0;\n\n  p5.setup = () => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight);\n    movevector = p5.createVector(0, 0);\n    speedvector = p5.createVector(0, 0);\n    goalpos = p5.createVector(0, 0);\n    charpos = p5.createVector(p5.windowWidth / 2, p5.windowHeight / 2);\n    leftpos = p5.createVector(charpos.x - 20, charpos.y);\n    rightpos = p5.createVector(charpos.x + 20, charpos.y);\n    leftfoot = p5.createVector(charpos.x - 20, charpos.y);\n    rightfoot = p5.createVector(charpos.x + 20, charpos.y);\n  };\n\n  p5.draw = () => {\n    p5.background(255, 255, 255, 255);\n\n    if (mcbool) {\n      p5.ellipse(p5.mouseX, p5.mouseY, 40, 40);\n      vectorControl();\n    } else if (gpbool) {\n      p5.ellipse(goalpos.x, goalpos.y, 40, 40);\n      vectorControl(goalpos.x, goalpos.y);\n    }\n\n    speedqualizervector();\n    legReworked();\n    lastAngle = charAngle;\n\n    if (stepboolcounter > stepspeed) {\n      stepboolcounter = 0;\n      stepbool = !stepbool;\n    }\n\n    stepboolcounter++;\n  };\n\n  function legReworked() {\n    let curAngle = charAngle - lastAngle;\n    rightpos.add(speedvector);\n    leftpos.add(speedvector);\n    leftpos = pointRotate(leftpos, charpos, curAngle);\n    rightpos = pointRotate(rightpos, charpos, curAngle);\n\n    if (!stepbool) {\n      leftfoot = p5.p5.Vector.lerp(leftfoot, leftpos, 0.1);\n    } else {\n      rightfoot = p5.Vector.lerp(rightfoot, rightpos, 0.1);\n    } // draw them leggos\n\n\n    p5.ellipse(leftfoot.x, leftfoot.y, 10, 10);\n    p5.ellipse(rightfoot.x, rightfoot.y, 10, 10);\n  }\n\n  function speedqualizervector() {\n    speedvector.add(movevector.mult(charspeed));\n    speedvector.limit(maxspeed);\n    const speedvmagSq = speedvector.magSq(); //if the player is not moving, the character should stop\n\n    if (speedvmagSq > 0) {\n      if (speedvmagSq.toFixed(2) > 0) {\n        if (movevector.x === 0) speedvector.x *= drag;\n        if (movevector.y === 0) speedvector.y *= drag;\n        charAngle = speedvector.heading() + p5.HALF_PI;\n      } else {\n        speedvector.mult(0);\n        charAngle = lastAngle;\n      }\n    }\n\n    charpos.add(speedvector);\n  }\n\n  function setMovevector() {\n    gpbool = false;\n    movevector.mult(0);\n    movevector.y += -1 * upPressed;\n    movevector.y += 1 * downPressed;\n    movevector.x += -1 * leftPressed;\n    movevector.x += 1 * rightPressed;\n    movevector.normalize();\n  }\n\n  function vectorControl(x = p5.mouseX, y = p5.mouseY) {\n    let vectorangle = p5.createVector(0, 0);\n    vectorangle.x = x - charpos.x;\n    vectorangle.y = y - charpos.y;\n\n    if (vectorangle.magSq() > 15) {\n      movevector = vectorangle.normalize();\n    } else {\n      speedvector.mult(drag ** 2);\n      movevector.mult(0);\n      gpbool = false;\n    }\n  }\n  /*\n  KEY SHIT\n  */\n\n\n  p5.keyPressed = () => {\n    if (p5.keyCode === p5.LEFT_ARROW) {\n      leftPressed = 1;\n    }\n\n    if (p5.keyCode === p5.RIGHT_ARROW) {\n      rightPressed = 1;\n    }\n\n    if (p5.keyCode === p5.UP_ARROW) {\n      upPressed = 1;\n    }\n\n    if (p5.keyCode === p5.DOWN_ARROW) {\n      downPressed = 1;\n    }\n\n    setMovevector();\n  };\n\n  p5.keyReleased = () => {\n    if (p5.keyCode === p5.LEFT_ARROW) {\n      leftPressed = 0;\n    }\n\n    if (p5.keyCode === p5.RIGHT_ARROW) {\n      rightPressed = 0;\n    }\n\n    if (p5.keyCode === p5.UP_ARROW) {\n      upPressed = 0;\n    }\n\n    if (p5.keyCode === p5.DOWN_ARROW) {\n      downPressed = 0;\n    }\n\n    setMovevector();\n  };\n\n  p5.mousePressed = () => {\n    mcbool = true;\n    gpbool = false;\n  };\n\n  p5.mouseReleased = () => {\n    mcbool = false;\n    gpbool = true;\n    goalpos.x = p5.mouseX;\n    goalpos.y = p5.mouseY;\n    movevector.x = 0;\n    movevector.y = 0;\n  };\n\n  p5.windowResized = () => {\n    p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n  };\n  /**\n  * For lack of better rotation in p5.js\n  * @param {vector} p5.Vector  \tThis is the vector (coord) that you want to rotate\n  * @param {pivot}  p5.Vector  \tThis is the vector (coord) you want to pivot around\n  * @param {angle}\tnumber  \t\tThis is the angle of the rotation in radians\n  */\n\n\n  function pointRotate(vector, pivot, angle) {\n    const s = p5.sin(angle);\n    const c = p5.cos(angle); // translate point back to origin:\n\n    vector.sub(pivot); // rotate point\n\n    let xnew = vector.x * c - vector.y * s;\n    let ynew = vector.x * s + vector.y * c; // translate point back:\n\n    vector.x = xnew + pivot.x;\n    vector.y = ynew + pivot.y;\n    return vector;\n  }\n};\n\nconst Walking = () => {\n  return /*#__PURE__*/_jsxDEV(P5Wrapper, {\n    sketch: sketch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Walking;\nexport default Walking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Walking\");","map":{"version":3,"sources":["/Users/floris.veldhuizen/Documents/GitHub/florisveldhuizen.github.io/src/pages/Walking.jsx"],"names":["P5Wrapper","sketch","p5","charpos","goalpos","leftpos","rightpos","leftfoot","rightfoot","speedvector","movevector","lastAngle","charAngle","gpbool","mcbool","stepbool","stepboolcounter","charspeed","maxspeed","stepspeed","drag","upPressed","downPressed","leftPressed","rightPressed","setup","createCanvas","windowWidth","windowHeight","createVector","x","y","draw","background","ellipse","mouseX","mouseY","vectorControl","speedqualizervector","legReworked","curAngle","add","pointRotate","Vector","lerp","mult","limit","speedvmagSq","magSq","toFixed","heading","HALF_PI","setMovevector","normalize","vectorangle","keyPressed","keyCode","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","keyReleased","mousePressed","mouseReleased","windowResized","resizeCanvas","vector","pivot","angle","s","sin","c","cos","sub","xnew","ynew","Walking"],"mappings":"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","sourcesContent":["import P5Wrapper from \"./utils/P5_Wrapper\";\n\nconst sketch = (p5) => {\n  /*\n  Made by: Floris Veldhuizen\n  */\n\n  let charpos, goalpos, leftpos, rightpos, leftfoot, rightfoot, speedvector, movevector, lastAngle = 0, charAngle = 0;\n  let gpbool = false, mcbool = false, stepbool = false, stepboolcounter = 0;\n\n  //player variables\n  let charspeed = 1,\n      maxspeed = 4,\n      stepspeed = 25,\n      drag = 0.9;\n\n  // controller values\n  let upPressed = 0, downPressed = 0, leftPressed = 0, rightPressed = 0;\n\n  p5.setup = () => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight);\n    movevector = p5.createVector(0,0);\n    speedvector = p5.createVector(0,0);\n    goalpos = p5.createVector(0,0);\n    charpos = p5.createVector( p5.windowWidth/2, p5.windowHeight/2);\n    leftpos = p5.createVector(charpos.x-20,charpos.y);\n    rightpos = p5.createVector(charpos.x+20,charpos.y);\n    leftfoot = p5.createVector(charpos.x-20,charpos.y);\n    rightfoot = p5.createVector(charpos.x+20,charpos.y);\n  }\n\n  p5.draw = () => {\n    p5.background(255,255,255,255);\n    if (mcbool) {\n      p5.ellipse(p5.mouseX, p5.mouseY, 40, 40);\n      vectorControl();\n    } else if (gpbool) {\n      p5.ellipse(goalpos.x, goalpos.y, 40, 40);\n      vectorControl(goalpos.x,goalpos.y);\n    }\n    speedqualizervector();\n    legReworked();\n    lastAngle = charAngle;\n    if(stepboolcounter > stepspeed){\n      stepboolcounter = 0;\n      stepbool = !stepbool;\n    }\n    stepboolcounter++;\n  }\n\n  function legReworked(){\n      let curAngle = charAngle - lastAngle;\n      rightpos.add(speedvector);\n      leftpos.add(speedvector);\n      leftpos = pointRotate(leftpos,charpos,curAngle);\n      rightpos = pointRotate(rightpos,charpos,curAngle);\n\n      if(!stepbool){\n        leftfoot = p5.p5.Vector.lerp(leftfoot,leftpos,0.1);\n      } else {\n        rightfoot = p5.Vector.lerp(rightfoot,rightpos,0.1);\n      }\n\n      // draw them leggos\n      p5.ellipse(leftfoot.x, leftfoot.y, 10, 10);\n      p5.ellipse(rightfoot.x, rightfoot.y, 10, 10);\n  }\n\n  function speedqualizervector(){\n    speedvector.add(movevector.mult(charspeed));\n    speedvector.limit(maxspeed);\n    const speedvmagSq = speedvector.magSq();\n    //if the player is not moving, the character should stop\n    if (speedvmagSq > 0) {\n      if(speedvmagSq.toFixed(2) > 0){\n        if(movevector.x===0) speedvector.x *= drag;\n        if(movevector.y===0) speedvector.y *= drag;\n        charAngle = speedvector.heading() + p5.HALF_PI;\n      } else {\n        speedvector.mult(0);\n        charAngle = lastAngle;\n      }\n    }\n    charpos.add(speedvector);\n  }\n\n  function setMovevector(){\n    gpbool = false;\n    movevector.mult(0);\n    movevector.y += -1 * upPressed;\n    movevector.y += 1 * downPressed;\n    movevector.x += -1 * leftPressed;\n    movevector.x += 1 * rightPressed;\n    movevector.normalize();\n  }\n\n  function vectorControl(x = p5.mouseX,y = p5.mouseY){\n    let vectorangle = p5.createVector(0,0);\n    vectorangle.x = (x - charpos.x);\n    vectorangle.y = (y - charpos.y);\n    if(vectorangle.magSq() > 15){\n      movevector = vectorangle.normalize();\n    } else {\n      speedvector.mult(drag**2);\n      movevector.mult(0);\n      gpbool = false;\n    }\n  }\n\n  /*\n  KEY SHIT\n  */\n  p5.keyPressed = () => {\n    if (p5.keyCode === p5.LEFT_ARROW) {\n      leftPressed = 1;\n    }\n    if (p5.keyCode === p5.RIGHT_ARROW) {\n      rightPressed = 1;\n    }\n    if (p5.keyCode === p5.UP_ARROW) {\n      upPressed = 1;\n    }\n    if (p5.keyCode === p5.DOWN_ARROW) {\n      downPressed = 1;\n    }\n    setMovevector();\n  }\n\n  p5.keyReleased = () => {\n    if (p5.keyCode === p5.LEFT_ARROW) {\n      leftPressed = 0;\n    }\n    if (p5.keyCode === p5.RIGHT_ARROW) {\n      rightPressed = 0;\n    }\n    if (p5.keyCode === p5.UP_ARROW) {\n      upPressed = 0;\n    }\n    if (p5.keyCode === p5.DOWN_ARROW) {\n      downPressed = 0;\n    }\n    setMovevector();\n  }\n  p5.mousePressed = () => {\n    mcbool = true;\n    gpbool = false;\n  }\n  p5.mouseReleased = () => {\n    mcbool = false;\n    gpbool = true;\n    goalpos.x = p5.mouseX;\n    goalpos.y = p5.mouseY;\n    movevector.x = 0;\n    movevector.y = 0;\n  }\n  p5.windowResized = () => {\n    p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n  }\n\n  /**\n  * For lack of better rotation in p5.js\n  * @param {vector} p5.Vector  \tThis is the vector (coord) that you want to rotate\n  * @param {pivot}  p5.Vector  \tThis is the vector (coord) you want to pivot around\n  * @param {angle}\tnumber  \t\tThis is the angle of the rotation in radians\n  */\n  function pointRotate(vector,pivot,angle){\n    const s = p5.sin(angle);\n    const c = p5.cos(angle);\n    // translate point back to origin:\n    vector.sub(pivot);\n    // rotate point\n    let xnew = vector.x * c - vector.y * s;\n    let ynew = vector.x * s + vector.y * c;\n    // translate point back:\n    vector.x = xnew + pivot.x;\n    vector.y = ynew + pivot.y;\n    return vector;\n  }\n}\n\nconst Walking = () => {\n  return (\n    <P5Wrapper sketch={sketch} />\n  );\n};\n\nexport default Walking;\n"]},"metadata":{},"sourceType":"module"}
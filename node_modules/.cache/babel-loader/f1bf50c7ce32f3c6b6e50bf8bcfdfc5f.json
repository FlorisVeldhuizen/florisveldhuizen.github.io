{"ast":null,"code":"import _classCallCheck from\"/Users/floris.veldhuizen/Documents/GitHub/florisveldhuizen.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/floris.veldhuizen/Documents/GitHub/florisveldhuizen.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/floris.veldhuizen/Documents/GitHub/florisveldhuizen.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/floris.veldhuizen/Documents/GitHub/florisveldhuizen.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import p5 from'p5';import{jsx as _jsx}from\"react/jsx-runtime\";export var P5Wrapper=/*#__PURE__*/function(_React$Component){_inherits(P5Wrapper,_React$Component);var _super=_createSuper(P5Wrapper);function P5Wrapper(){_classCallCheck(this,P5Wrapper);return _super.apply(this,arguments);}_createClass(P5Wrapper,[{key:\"componentDidMount\",value:function componentDidMount(){this.canvas=new p5(this.props.sketch,this.wrapper);if(this.canvas.myCustomRedrawAccordingToNewPropsHandler){this.canvas.myCustomRedrawAccordingToNewPropsHandler(this.props);}}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(newprops){if(this.props.sketch!==newprops.sketch){this.canvas.remove();this.canvas=new p5(newprops.sketch,this.wrapper);}if(this.canvas.myCustomRedrawAccordingToNewPropsHandler){this.canvas.myCustomRedrawAccordingToNewPropsHandler(newprops);}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.canvas.remove();}},{key:\"render\",value:function render(){var _this=this;return/*#__PURE__*/_jsx(\"div\",{ref:function ref(wrapper){return _this.wrapper=wrapper;}});}}]);return P5Wrapper;}(React.Component);export var cleanupFavicon=function cleanupFavicon(){return function(){var metaTag=document.querySelector(\"link[rel=\\\"icon\\\"]\");if(metaTag){console.log(metaTag);metaTag.remove();}};};","map":{"version":3,"sources":["/Users/floris.veldhuizen/Documents/GitHub/florisveldhuizen.github.io/src/pages/helper.js"],"names":["React","p5","P5Wrapper","canvas","props","sketch","wrapper","myCustomRedrawAccordingToNewPropsHandler","newprops","remove","Component","cleanupFavicon","metaTag","document","querySelector","console","log"],"mappings":"4tBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,EAAP,KAAe,IAAf,C,2CACA,UAAaC,CAAAA,SAAb,mQACE,4BAAoB,CAClB,KAAKC,MAAL,CAAc,GAAIF,CAAAA,EAAJ,CAAO,KAAKG,KAAL,CAAWC,MAAlB,CAA0B,KAAKC,OAA/B,CAAd,CACA,GAAI,KAAKH,MAAL,CAAYI,wCAAhB,CAA2D,CACzD,KAAKJ,MAAL,CAAYI,wCAAZ,CAAqD,KAAKH,KAA1D,EACD,CACF,CANH,yCAQE,mCAA0BI,QAA1B,CAAoC,CAClC,GAAG,KAAKJ,KAAL,CAAWC,MAAX,GAAsBG,QAAQ,CAACH,MAAlC,CAAyC,CACvC,KAAKF,MAAL,CAAYM,MAAZ,GACA,KAAKN,MAAL,CAAc,GAAIF,CAAAA,EAAJ,CAAOO,QAAQ,CAACH,MAAhB,CAAwB,KAAKC,OAA7B,CAAd,CACD,CACD,GAAI,KAAKH,MAAL,CAAYI,wCAAhB,CAA2D,CACzD,KAAKJ,MAAL,CAAYI,wCAAZ,CAAqDC,QAArD,EACD,CACF,CAhBH,oCAkBE,+BAAuB,CACrB,KAAKL,MAAL,CAAYM,MAAZ,GACD,CApBH,sBAsBE,iBAAS,gBACP,mBAAO,YAAK,GAAG,CAAE,aAAAH,OAAO,QAAI,CAAA,KAAI,CAACA,OAAL,CAAeA,OAAnB,EAAjB,EAAP,CACD,CAxBH,uBAA+BN,KAAK,CAACU,SAArC,EA2BA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAClC,MAAO,WAAM,CACX,GAAMC,CAAAA,OAAO,CAAGC,QAAQ,CAACC,aAAT,sBAAhB,CACA,GAAIF,OAAJ,CAAa,CACXG,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EACAA,OAAO,CAACH,MAAR,GACD,CACF,CAND,CAOD,CARM","sourcesContent":["import React from 'react'\nimport p5 from 'p5'\nexport class P5Wrapper extends React.Component {\n  componentDidMount() {\n    this.canvas = new p5(this.props.sketch, this.wrapper)\n    if( this.canvas.myCustomRedrawAccordingToNewPropsHandler ) {\n      this.canvas.myCustomRedrawAccordingToNewPropsHandler(this.props)\n    }\n  }\n\n  componentWillReceiveProps(newprops) {\n    if(this.props.sketch !== newprops.sketch){\n      this.canvas.remove()\n      this.canvas = new p5(newprops.sketch, this.wrapper)\n    }\n    if( this.canvas.myCustomRedrawAccordingToNewPropsHandler ) {\n      this.canvas.myCustomRedrawAccordingToNewPropsHandler(newprops)\n    }\n  }\n\n  componentWillUnmount() {\n    this.canvas.remove()\n  }\n\n  render() {\n    return <div ref={wrapper => this.wrapper = wrapper}></div>\n  }\n}\n\nexport const cleanupFavicon = () => {\n  return () => {\n    const metaTag = document.querySelector(`link[rel=\"icon\"]`);\n    if (metaTag) {\n      console.log(metaTag);\n      metaTag.remove();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/Users/floris.veldhuizen/Documents/GitHub/florisveldhuizen.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/Users/floris.veldhuizen/Documents/GitHub/florisveldhuizen.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import P5Wrapper from\"./utils/P5_Wrapper\";import{jsx as _jsx}from\"react/jsx-runtime\";var sketch=function sketch(p5){/*\n  Made by: Floris Veldhuizen\n  Queuing of moves was adapted from: https://github.com/patorjk/JavaScript-Snake/blob/master/js/snake.js\n  */ // PARAMS\nvar fieldWidth=400;var fieldHeight=400;var gridResX=14;// How many squares fit in a row  (default: 14)\nvar gameSpeed=13;// Amount of frames per second    (default: 12)\nvar snakeSize=5;// GLOBAL VARIABLES\nvar NIL=-1;var _RIGHT=0;var _DOWN=1;var _LEFT=2;var _UP=3;// PRECALCULATED VALUES\nvar fieldOffsetX,fieldOffsetY,squareSize,gridResY,maxLength,lastDir;// TOUCH CONTROLS\nvar startTouchX,startTouchY;var touchControl=false;// If true, the touch controls are displayed on screen\nvar touchDir=NIL;var arcSize=120;// Diameter of the touch controls\nvar isFirstMove=true;var preMove=NIL;var curDir=_RIGHT;var curLoc=[0,0];var bodyParts=[];var bodyLength=snakeSize-1;var death=false;var iterationCounter=0;var snaccPos=[0,0];var _frameRate=Math.floor(60/gameSpeed);// Assuming 60 fps\nvar highScore=0;p5.setup=function(){p5.createCanvas(p5.windowWidth,p5.windowHeight);p5.background(0,0,0,100);fieldOffsetX=p5.windowWidth/2-fieldWidth/2;fieldOffsetY=p5.windowHeight/2-fieldHeight/2;squareSize=fieldWidth/gridResX;gridResY=Math.floor(fieldHeight/squareSize);maxLength=gridResX*gridResY;spawnSnacc();};p5.draw=function(){if(touchControl)calcTouch();if(iterationCounter>_frameRate){p5.background(0,0,0,100);calcNewPos();drawGrid();drawPlayer();drawSnacc();iterationCounter=0;}if(touchControl)drawTouch();if(death)reset();iterationCounter++;drawScore();};var reset=function reset(){p5.fill(255);p5.rect(0,0,p5.windowWidth,p5.windowHeight);p5.background(0,0,0,100);bodyLength=snakeSize-1;bodyParts=[];death=false;};var drawGrid=function drawGrid(){p5.stroke(255);p5.fill(0);for(var i=0;i<gridResX;i++){// x-axis\nfor(var j=0;j<gridResY;j++){// y-axis\np5.rect(i*squareSize+fieldOffsetX,j*squareSize+fieldOffsetY,squareSize,squareSize);}}};var drawScore=function drawScore(){var fontSize=30;var curScore=bodyLength-(snakeSize-1);if(curScore>highScore)highScore=curScore;p5.textSize(fontSize);p5.fill(255);// Highscore\np5.textAlign(p5.RIGHT);p5.text(\"\".concat(String.fromCodePoint(0x1F3C6),\": \").concat(highScore),fieldOffsetX+fieldWidth,fieldOffsetY-fontSize);// Current score\np5.textAlign(p5.LEFT);p5.text(\"\".concat(String.fromCodePoint(0x1F36C),\": \").concat(curScore),fieldOffsetX,fieldOffsetY-fontSize);};var spawnSnacc=function spawnSnacc(){// TO-DO: use maxLength to determine when the game is over\nvar returnRandomPos=function returnRandomPos(){var xPos=Math.floor(Math.random()*gridResX);var yPos=Math.floor(Math.random()*gridResY);var overlap=bodyParts.some(function(part){return part[0]===xPos&&part[1]===yPos;});return overlap?returnRandomPos():[xPos,yPos];};var returnAvailablePos=function returnAvailablePos(){var gridObject={};_toConsumableArray(Array(gridResX)).forEach(function(_,i){return gridObject[i]=_toConsumableArray(Array(gridResY).keys());});var _loop=function _loop(){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];var keyInt=parseInt(key);gridObject[key]=value.filter(function(elem){return!bodyParts.some(function(part){return part[0]===keyInt&&part[1]===elem;});});if(gridObject[key].length<1)delete gridObject[key];};for(var _i=0,_Object$entries=Object.entries(gridObject);_i<_Object$entries.length;_i++){_loop();}var availableKeys=Object.keys(gridObject);var availableX=parseInt(availableKeys[Math.floor(Math.random()*availableKeys.length)]);var availableY=gridObject[availableX][Math.floor(Math.random()*gridObject[availableX].length)];return[availableX,availableY];};return snaccPos=bodyLength<maxLength/2?returnRandomPos():returnAvailablePos();};var drawSnacc=function drawSnacc(){p5.textSize(32);p5.text(\"\".concat(String.fromCodePoint(0x1F36C)),snaccPos[0]*squareSize+fieldOffsetX,(snaccPos[1]+0.9)*squareSize+fieldOffsetY);};var calcNewPos=function calcNewPos(){// Set lastDir and check for queued moves\nlastDir=curDir;if(preMove!==NIL){curDir=preMove;preMove=NIL;}isFirstMove=true;// Calculate new position of body based on direction\nif(lastDir===_UP){curLoc[1]--;}else if(lastDir===_DOWN){curLoc[1]++;}else if(lastDir===_LEFT){curLoc[0]--;}else if(lastDir===_RIGHT){curLoc[0]++;}// Boundary check\nif(curLoc[1]<0){curLoc[1]=gridResY-1;}else if(curLoc[1]>gridResY-1){curLoc[1]=0;}else if(curLoc[0]<0){curLoc[0]=gridResX-1;}else if(curLoc[0]>gridResX-1){curLoc[0]=0;}// Shift the snake body\nif(bodyParts.length>bodyLength){bodyParts.shift();}// Death üíÄ check\nbodyParts.forEach(function(part){if(curLoc[0]===part[0]&&curLoc[1]===part[1]){death=true;console.error(\"U DEAD \".concat(String.fromCodePoint(0x1F480)));}});// Set all bodyparts\nbodyParts.push([].concat(curLoc));// Snacc üç¨ check\nif(curLoc[0]===snaccPos[0]&&curLoc[1]===snaccPos[1]){bodyLength++;spawnSnacc();}};var drawPlayer=function drawPlayer(){var colorInterval=Math.floor(155/bodyLength);bodyParts.forEach(function(part,index){p5.fill(index*colorInterval+100,0,0);p5.rect(part[0]*squareSize+fieldOffsetX,part[1]*squareSize+fieldOffsetY,squareSize,squareSize);});};var setDirection=function setDirection(dir){if(curDir!==lastDir){preMove=dir;}if(Math.abs(dir-lastDir)!==2&&isFirstMove){curDir=dir;isFirstMove=false;}touchDir=dir;};var calcTouch=function calcTouch(){var distSquared=function distSquared(x1,y1,x2,y2){var dx=x2-x1;var dy=y2-y1;return dx*dx+dy*dy;};var radianDistance=Math.atan2(p5.mouseY-startTouchY,p5.mouseX-startTouchX);if(radianDistance<0)radianDistance=radianDistance+p5.TWO_PI;if(distSquared(startTouchX,startTouchY,p5.mouseX,p5.mouseY)>100){if(radianDistance>p5.TWO_PI-p5.QUARTER_PI||radianDistance<p5.QUARTER_PI){setDirection(_RIGHT);}else if(radianDistance>p5.QUARTER_PI&&radianDistance<p5.HALF_PI+p5.QUARTER_PI){setDirection(_DOWN);}else if(radianDistance>p5.HALF_PI+p5.QUARTER_PI&&radianDistance<p5.PI+p5.QUARTER_PI){setDirection(_LEFT);}else if(radianDistance>p5.PI+p5.QUARTER_PI&&radianDistance<p5.TWO_PI-p5.QUARTER_PI){setDirection(_UP);}}else{touchDir=NIL;}};var drawTouch=function drawTouch(){var bottomArc=function bottomArc(){return p5.arc(startTouchX,startTouchY,arcSize,arcSize,p5.QUARTER_PI,p5.HALF_PI+p5.QUARTER_PI);};var leftArc=function leftArc(){return p5.arc(startTouchX,startTouchY,arcSize,arcSize,p5.HALF_PI+p5.QUARTER_PI,p5.PI+p5.QUARTER_PI);};var topArc=function topArc(){return p5.arc(startTouchX,startTouchY,arcSize,arcSize,p5.PI+p5.QUARTER_PI,p5.TWO_PI-p5.QUARTER_PI);};var rightArc=function rightArc(){return p5.arc(startTouchX,startTouchY,arcSize,arcSize,p5.TWO_PI-p5.QUARTER_PI,p5.QUARTER_PI);};p5.fill(100);p5.ellipse(startTouchX,startTouchY,arcSize,arcSize);p5.fill(200);if(touchDir===_UP)topArc();if(touchDir===_DOWN)bottomArc();if(touchDir===_LEFT)leftArc();if(touchDir===_RIGHT)rightArc();// TO-DO: DRAW JOYSTICK THAT IS constrained BY BOUNDARIES OF CONTROL\np5.fill(50);p5.ellipse(p5.mouseX,p5.mouseY,arcSize/2,arcSize/2);};var handleTouchEnd=function handleTouchEnd(){touchControl=false;return false;};var handleTouchBegin=function handleTouchBegin(){startTouchX=p5.mouseX;startTouchY=p5.mouseY;touchControl=true;return false;};var handleKeys=function handleKeys(keyType,up,down,left,right){if(keyType===right){setDirection(_RIGHT);}if(keyType===down){setDirection(_DOWN);}if(keyType===left){setDirection(_LEFT);}if(keyType===up){setDirection(_UP);}};p5.mousePressed=function(){return handleTouchBegin();};p5.touchStarted=function(){return handleTouchBegin();};p5.mouseReleased=function(){return handleTouchEnd();};p5.touchEnded=function(){return handleTouchEnd();};p5.keyTyped=function(){handleKeys(p5.key,\"w\",\"s\",\"a\",\"d\");};p5.keyPressed=function(){handleKeys(p5.keyCode,p5.UP_ARROW,p5.DOWN_ARROW,p5.LEFT_ARROW,p5.RIGHT_ARROW);};p5.windowResized=function(){p5.resizeCanvas(p5.windowWidth,p5.windowHeight);p5.background(0,0,0,100);fieldOffsetX=p5.windowWidth/2-fieldWidth/2;fieldOffsetY=p5.windowHeight/2-fieldHeight/2;squareSize=fieldWidth/gridResX;};};var FunkySnake=function FunkySnake(){return/*#__PURE__*/_jsx(P5Wrapper,{sketch:sketch});};export default FunkySnake;","map":{"version":3,"sources":["/Users/floris.veldhuizen/Documents/GitHub/florisveldhuizen.github.io/src/pages/FunkySnake.jsx"],"names":["P5Wrapper","sketch","p5","fieldWidth","fieldHeight","gridResX","gameSpeed","snakeSize","NIL","_RIGHT","_DOWN","_LEFT","_UP","fieldOffsetX","fieldOffsetY","squareSize","gridResY","maxLength","lastDir","startTouchX","startTouchY","touchControl","touchDir","arcSize","isFirstMove","preMove","curDir","curLoc","bodyParts","bodyLength","death","iterationCounter","snaccPos","_frameRate","Math","floor","highScore","setup","createCanvas","windowWidth","windowHeight","background","spawnSnacc","draw","calcTouch","calcNewPos","drawGrid","drawPlayer","drawSnacc","drawTouch","reset","drawScore","fill","rect","stroke","i","j","fontSize","curScore","textSize","textAlign","RIGHT","text","String","fromCodePoint","LEFT","returnRandomPos","xPos","random","yPos","overlap","some","part","returnAvailablePos","gridObject","Array","forEach","_","keys","key","value","keyInt","parseInt","filter","elem","length","Object","entries","availableKeys","availableX","availableY","shift","console","error","push","colorInterval","index","setDirection","dir","abs","distSquared","x1","y1","x2","y2","dx","dy","radianDistance","atan2","mouseY","mouseX","TWO_PI","QUARTER_PI","HALF_PI","PI","bottomArc","arc","leftArc","topArc","rightArc","ellipse","handleTouchEnd","handleTouchBegin","handleKeys","keyType","up","down","left","right","mousePressed","touchStarted","mouseReleased","touchEnded","keyTyped","keyPressed","keyCode","UP_ARROW","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","windowResized","resizeCanvas","FunkySnake"],"mappings":"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","sourcesContent":["import P5Wrapper from \"./utils/P5_Wrapper\";\n\nconst sketch = (p5) => {\n  /*\n  Made by: Floris Veldhuizen\n  Queuing of moves was adapted from: https://github.com/patorjk/JavaScript-Snake/blob/master/js/snake.js\n  */\n\n  // PARAMS\n  const fieldWidth = 400;\n  const fieldHeight = 400;\n  const gridResX = 14;          // How many squares fit in a row  (default: 14)\n  const gameSpeed = 13;         // Amount of frames per second    (default: 12)\n  const snakeSize = 5;\n\n  // GLOBAL VARIABLES\n  const NIL     = -1;\n  const _RIGHT  = 0;\n  const _DOWN   = 1;\n  const _LEFT   = 2;\n  const _UP     = 3;\n\n  // PRECALCULATED VALUES\n  let fieldOffsetX, fieldOffsetY, squareSize, gridResY, maxLength, lastDir;\n\n  // TOUCH CONTROLS\n  let startTouchX, startTouchY;\n  let touchControl = false;     // If true, the touch controls are displayed on screen\n  let touchDir = NIL;\n  const arcSize = 120;          // Diameter of the touch controls\n\n  let isFirstMove = true;\n  let preMove = NIL;\n  let curDir = _RIGHT;\n  let curLoc = [0,0];\n  let bodyParts = [];\n  let bodyLength = snakeSize - 1;\n  let death = false;\n  let iterationCounter = 0;\n  let snaccPos = [0,0];\n  let _frameRate = Math.floor(60 / gameSpeed); // Assuming 60 fps\n  let highScore = 0;\n\n  p5.setup = () => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight);\n    p5.background(0,0,0,100);\n    fieldOffsetX = (p5.windowWidth/2)-(fieldWidth/2);\n    fieldOffsetY = (p5.windowHeight/2)-(fieldHeight/2);\n    squareSize = fieldWidth / gridResX;\n    gridResY = Math.floor(fieldHeight / squareSize);\n    maxLength = gridResX * gridResY;\n    spawnSnacc();\n  }\n\n  p5.draw = () => {\n    if (touchControl) calcTouch();\n    if (iterationCounter > _frameRate) {\n      p5.background(0,0,0,100);\n      calcNewPos();\n      drawGrid();\n      drawPlayer();\n      drawSnacc();\n      iterationCounter = 0;\n    }\n    if (touchControl) drawTouch();\n    if (death) reset();\n    iterationCounter++;\n    drawScore();\n  }\n\n  const reset = () => {\n    p5.fill(255);\n    p5.rect(0,0,p5.windowWidth,p5.windowHeight);\n    p5.background(0,0,0,100);\n    bodyLength = snakeSize - 1;\n    bodyParts = [];\n    death = false;\n  }\n\n  const drawGrid = () => {\n    p5.stroke(255)\n    p5.fill(0);\n    for (let i = 0; i < gridResX; i++) { // x-axis\n      for (let j = 0; j < gridResY; j++) { // y-axis\n        p5.rect(i * squareSize + fieldOffsetX, j * squareSize + fieldOffsetY, squareSize, squareSize);\n      }\n    }\n  }\n\n  const drawScore = () => {\n    const fontSize = 30;\n    const curScore = bodyLength - (snakeSize - 1);\n    if(curScore > highScore) highScore = curScore;\n    p5.textSize(fontSize);\n    p5.fill(255)\n    // Highscore\n    p5.textAlign(p5.RIGHT);\n    p5.text(`${String.fromCodePoint(0x1F3C6)}: ${highScore}`, fieldOffsetX + fieldWidth, fieldOffsetY - fontSize);\n    // Current score\n    p5.textAlign(p5.LEFT);\n    p5.text(`${String.fromCodePoint(0x1F36C)}: ${curScore}`, fieldOffsetX, fieldOffsetY - fontSize);\n  }\n\n  const spawnSnacc = () => {\n    // TO-DO: use maxLength to determine when the game is over\n    const returnRandomPos = () => {\n      const xPos = Math.floor(Math.random() * gridResX);\n      const yPos = Math.floor(Math.random() * gridResY);\n      const overlap = bodyParts.some(part => (part[0] === xPos && part[1] === yPos));\n      return overlap ? returnRandomPos() : [xPos, yPos];\n    }\n\n    const returnAvailablePos = () => {\n      const gridObject = {};\n      [...Array(gridResX)].forEach((_,i) => gridObject[i] = [...Array(gridResY).keys()]);\n      for (const [key, value] of Object.entries(gridObject)) {\n        const keyInt = parseInt(key);\n        gridObject[key] = value.filter(elem =>\n          !bodyParts.some(part => part[0] === keyInt && part[1] === elem)\n        )\n        if (gridObject[key].length < 1) delete gridObject[key];\n      }\n      const availableKeys = Object.keys(gridObject);\n      const availableX = parseInt(availableKeys[Math.floor(Math.random() * availableKeys.length)]);\n      const availableY = gridObject[availableX][Math.floor(Math.random() * gridObject[availableX].length)];\n      return [availableX, availableY];\n    }\n\n  return snaccPos = bodyLength < maxLength / 2 ? returnRandomPos() : returnAvailablePos();\n  }\n\n  const drawSnacc = () => {\n    p5.textSize(32);\n    p5.text(`${String.fromCodePoint(0x1F36C)}`, snaccPos[0] * squareSize + fieldOffsetX, (snaccPos[1] + 0.9) * squareSize + fieldOffsetY);\n  }\n\n  const calcNewPos = () => {\n    // Set lastDir and check for queued moves\n    lastDir = curDir;\n    if (preMove !== NIL) {\n      curDir = preMove;\n      preMove = NIL;\n    }\n    isFirstMove = true;\n\n    // Calculate new position of body based on direction\n    if      (lastDir === _UP)    { curLoc[1]-- }\n    else if (lastDir === _DOWN)  { curLoc[1]++ }\n    else if (lastDir === _LEFT)  { curLoc[0]-- }\n    else if (lastDir === _RIGHT) { curLoc[0]++ }\n\n    // Boundary check\n    if      (curLoc[1] < 0) { curLoc[1] = gridResY - 1 }\n    else if (curLoc[1] > gridResY - 1) { curLoc[1] = 0 }\n    else if (curLoc[0] < 0) { curLoc[0] = gridResX - 1 }\n    else if (curLoc[0] > gridResX - 1) { curLoc[0] = 0 }\n\n    // Shift the snake body\n    if (bodyParts.length > bodyLength) { bodyParts.shift(); }\n\n    // Death üíÄ check\n    bodyParts.forEach(part => {\n      if (curLoc[0] === part[0] && curLoc[1] === part[1]) {\n      death = true;\n      console.error(`U DEAD ${String.fromCodePoint(0x1F480)}`);\n      }\n    });\n\n    // Set all bodyparts\n    bodyParts.push([...curLoc]);\n\n    // Snacc üç¨ check\n    if (curLoc[0] === snaccPos[0] && curLoc[1] === snaccPos[1]) {\n      bodyLength++;\n      spawnSnacc();\n    }\n  }\n\n  const drawPlayer = () => {\n    const colorInterval = Math.floor(155 / bodyLength);\n    bodyParts.forEach((part,index) => {\n      p5.fill(index * colorInterval + 100,0,0);\n      p5.rect(part[0] * squareSize + fieldOffsetX, part[1] * squareSize + fieldOffsetY, squareSize, squareSize);\n    });\n  }\n\n  const setDirection = dir => {\n    if (curDir !== lastDir) { preMove = dir }\n    if (Math.abs(dir - lastDir) !== 2 && isFirstMove) {\n      curDir = dir;\n      isFirstMove = false;\n    }\n    touchDir = dir;\n  }\n\n  const calcTouch = () => {\n    const distSquared = (x1, y1, x2, y2) => {\n      let dx = x2 - x1;\n      let dy = y2 - y1;\n      return dx * dx + dy * dy;\n    }\n    let radianDistance = Math.atan2(p5.mouseY-startTouchY, p5.mouseX-startTouchX);\n    if (radianDistance < 0) radianDistance = radianDistance + p5.TWO_PI;\n    if(distSquared(startTouchX, startTouchY, p5.mouseX, p5.mouseY) > 100) {\n      if      (radianDistance > p5.TWO_PI - p5.QUARTER_PI || radianDistance < p5.QUARTER_PI)          { setDirection(_RIGHT)}\n      else if (radianDistance > p5.QUARTER_PI && radianDistance < p5.HALF_PI + p5.QUARTER_PI)         { setDirection(_DOWN) }\n      else if (radianDistance > p5.HALF_PI + p5.QUARTER_PI && radianDistance < p5.PI + p5.QUARTER_PI) { setDirection(_LEFT) }\n      else if (radianDistance > p5.PI + p5.QUARTER_PI && radianDistance < p5.TWO_PI - p5.QUARTER_PI)  { setDirection(_UP)   }\n    } else {\n      touchDir = NIL;\n    }\n  }\n\n  const drawTouch = () => {\n    const bottomArc = () => p5.arc(startTouchX, startTouchY, arcSize, arcSize, p5.QUARTER_PI, p5.HALF_PI + p5.QUARTER_PI);\n    const leftArc   = () => p5.arc(startTouchX, startTouchY, arcSize, arcSize, p5.HALF_PI + p5.QUARTER_PI, p5.PI + p5.QUARTER_PI);\n    const topArc    = () => p5.arc(startTouchX, startTouchY, arcSize, arcSize, p5.PI + p5.QUARTER_PI, p5.TWO_PI - p5.QUARTER_PI);\n    const rightArc  = () => p5.arc(startTouchX, startTouchY, arcSize, arcSize, p5.TWO_PI - p5.QUARTER_PI, p5.QUARTER_PI);\n\n    p5.fill(100);\n    p5.ellipse(startTouchX, startTouchY, arcSize, arcSize);\n    p5.fill(200);\n    if (touchDir === _UP)    topArc();\n    if (touchDir === _DOWN)  bottomArc();\n    if (touchDir === _LEFT)  leftArc();\n    if (touchDir === _RIGHT) rightArc();\n\n    // TO-DO: DRAW JOYSTICK THAT IS constrained BY BOUNDARIES OF CONTROL\n    p5.fill(50);\n    p5.ellipse(p5.mouseX, p5.mouseY, arcSize/2, arcSize/2);\n  }\n\n  const handleTouchEnd = () => {\n    touchControl = false;\n    return false;\n  }\n\n  const handleTouchBegin = () => {\n    startTouchX = p5.mouseX;\n    startTouchY = p5.mouseY;\n    touchControl = true;\n    return false;\n  }\n\n  const handleKeys = (keyType, up, down, left, right) => {\n    if (keyType === right) { setDirection(_RIGHT)}\n    if (keyType === down)  { setDirection(_DOWN) }\n    if (keyType === left)  { setDirection(_LEFT) }\n    if (keyType === up)    { setDirection(_UP)   }\n  }\n\n  p5.mousePressed = () => {\n    return handleTouchBegin();\n  }\n\n  p5.touchStarted = () => {\n    return handleTouchBegin();\n  }\n\n  p5.mouseReleased = () => {\n    return handleTouchEnd();\n  }\n\n  p5.touchEnded = () => {\n    return handleTouchEnd();\n  }\n\n  p5.keyTyped = () => {\n    handleKeys(p5.key, \"w\", \"s\", \"a\", \"d\");\n  }\n\n  p5.keyPressed = () => {\n    handleKeys(p5.keyCode, p5.UP_ARROW, p5.DOWN_ARROW, p5.LEFT_ARROW, p5.RIGHT_ARROW);\n  }\n\n  p5.windowResized = () => {\n    p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n    p5.background(0,0,0,100);\n    fieldOffsetX = (p5.windowWidth/2)-(fieldWidth/2);\n    fieldOffsetY = (p5.windowHeight/2)-(fieldHeight/2);\n    squareSize = fieldWidth / gridResX;\n  }\n}\n\nconst FunkySnake = () => {\n  return (\n    <P5Wrapper sketch={sketch} />\n  );\n};\n\nexport default FunkySnake;\n"]},"metadata":{},"sourceType":"module"}